from itertools import product
class Solution:
    def hasAllCodes(self,s,k):
        if (k ** 2) + 1 < len(s):
            helping_array = []
            helping_array.extend(product(['0', '1'], repeat=k))
            for i in range(len(helping_array)):
                helping_array[i] = "".join(helping_array[i])
                if helping_array[i] not in s:
                    return False
            return True
        else:
            return False


        # for i in range(2 ** k):
        #     bin_value = bin(i)[2:] if len(bin(i)[2:]) == k else '0' * (k - len(bin(i)[2:])) + bin(i)[2]
        #     print(bin_value)
        #     if bin_value not in s:
        #         return False
        # return True




if __name__=="__main__":
    s

    k=19
    print(Solution().hasAllCodes(s,k))
